{"version":3,"sources":["index.js"],"names":["Form","props","state","todos","history","type","pageFlg","copyTodos","this","copyHistory","push","name","setState","i","splice","event","inputContent","target","value","pageContents","className","onChange","changeInput","onClick","addTodo","map","todo","delTodo","works","viewNormal","viewAll","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mPAMMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,GACPC,QAAQ,GACRC,KAAM,GACNC,SAAS,GANM,E,2CAUnB,SAAQD,GACN,GAAIA,EAAM,CACR,IAAIE,EAAS,YAAOC,KAAKN,MAAMC,OAC3BM,EAAW,YAAOD,KAAKN,MAAME,SACjCG,EAAUG,KACR,CACEC,KAAMN,IAGVI,EAAYC,KACV,CACEC,KAAMN,IAGVG,KAAKI,SACH,CACET,MAAOI,EACPH,QAASK,EACTJ,KAAM,Q,qBAMd,SAAQQ,GACN,IAAIN,EAAS,YAAOC,KAAKN,MAAMC,OAC/BI,EAAUO,OAAOD,EAAE,GACnBL,KAAKI,SACH,CACET,MAAOI,M,yBAKb,SAAYQ,GACV,IAAMC,EAAeD,EAAME,OAAOC,MAClCV,KAAKI,SAAS,CACZP,KAAMW,M,qBAGV,WACER,KAAKI,SAAS,CACZN,SAAS,M,wBAGb,WACEE,KAAKI,SAAS,CACZN,SAAS,M,oBAIb,WAAU,IAAD,OACHa,EAAe,GAGjBA,EADEX,KAAKN,MAAMI,QAEX,gCACE,qBAAIc,UAAU,aAAd,UACE,6BACE,uBAAOF,MAAOV,KAAKN,MAAMG,KAAMgB,SAAU,SAACN,GAAY,EAAKO,YAAYP,QAEzE,6BACE,wBAAQQ,QAAS,WAAQ,EAAKC,QAAQ,EAAKtB,MAAMG,OAAjD,+BAGHG,KAAKN,MAAMC,MAAMsB,KAAI,SAACC,EAAKb,GAC1B,OACE,qBAAIO,UAAU,aAAd,UACE,6BAAI,4BAAIM,EAAKf,SACb,6BAAI,wBAAQS,UAAU,OAAOG,QAAS,WAAQ,EAAKI,QAAQd,IAAvD,8BAF0BA,SAYtC,8BACGL,KAAKN,MAAME,QAAQqB,KAAI,SAACC,EAAKb,GAC5B,OACE,oBAAIO,UAAU,iBAAd,SACE,6BAAI,4BAAIM,EAAKf,UADqBE,QAUhC,YAAOL,KAAKN,MAAMC,OACpBK,KAAKN,MAAM0B,MACvB,OACE,sBAAKR,UAAU,OAAf,UACE,oBAAIA,UAAU,gBAAd,oCACA,sBAAKA,UAAU,yBAAf,UACE,wBAAQA,UAAU,mBAAmBG,QAAS,WAAO,EAAKM,cAA1D,kBACA,wBAAQT,UAAU,mBAAmBG,QAAS,WAAK,EAAKO,WAAxD,6BAEDX,S,GAhHUY,IAAMC,WAsHzBC,IAASC,OAAO,cAAClC,EAAD,IAAUmC,SAASC,eAAe,W","file":"static/js/main.4367f52f.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './destyle.css';\nimport './index.scss';\n\n//コンポーネント\nclass Form extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: [],\n      history:[],\n      type: '',\n      pageFlg: true,\n    }\n  }\n  //追加\n  addTodo(type) {\n    if (type) {\n      let copyTodos = [...this.state.todos];\n      let copyHistory = [...this.state.history];\n      copyTodos.push(\n        {\n          name: type,\n        }\n      );\n      copyHistory.push(\n        {\n          name: type,\n        }\n      );\n      this.setState(\n        {\n          todos: copyTodos,\n          history: copyHistory,\n          type: '',\n        }\n      )\n    }\n  }\n  //削除\n  delTodo(i) {\n    let copyTodos = [...this.state.todos];\n    copyTodos.splice(i,1);\n    this.setState(\n      {\n        todos: copyTodos,\n      }\n    )\n  }\n  //input処理\n  changeInput(event) {\n    const inputContent = event.target.value;\n    this.setState({\n      type: inputContent,\n    })\n  }\n  viewAll() {\n    this.setState({\n      pageFlg: false,\n    })\n  }\n  viewNormal() {\n    this.setState({\n      pageFlg: true,\n    })\n  }\n\n  render() {\n    let pageContents = '';\n    //通常ページ\n    if (this.state.pageFlg) {\n      pageContents = (\n        <div>\n          <ul className=\"todo__list\">\n            <li>\n              <input value={this.state.type} onChange={(event) => { this.changeInput(event) }} />\n            </li>\n            <li>\n              <button onClick={() => { this.addTodo(this.state.type) }}>追加</button>\n            </li>\n          </ul>\n          {this.state.todos.map((todo,i) => {\n            return (\n              <ul className=\"todo__list\" key={i}>\n                <li><p>{todo.name}</p></li>\n                <li><button className=\"done\" onClick={() => { this.delTodo(i)}}>完了</button></li>\n              </ul>\n            );\n          })}\n\n        </div >\n      );\n    } else {\n      //ヒストリーページ\n      pageContents = (\n        <div>\n          {this.state.history.map((todo,i) => {\n            return (\n              <ul className=\"todo__list all\" key={i}>\n                <li><p>{todo.name}</p></li>\n              </ul>\n            );\n          })}\n\n        </div >\n      );\n    }\n    //共通上部パーツ\n    const copyList = [...this.state.todos];\n    let works = this.state.works;\n    return (\n      <div className=\"todo\">\n        <h1 className=\"todo__heading\">TODOリスト</h1>\n        <div className=\"todo__all_button__list\">\n          <button className=\"todo__all_button\" onClick={() => {this.viewNormal() } }>TODO</button>\n          <button className=\"todo__all_button\" onClick={()=>{this.viewAll()}}>全て</button>\n        </div>\n        {pageContents}\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Form />, document.getElementById('root'));\n"],"sourceRoot":""}